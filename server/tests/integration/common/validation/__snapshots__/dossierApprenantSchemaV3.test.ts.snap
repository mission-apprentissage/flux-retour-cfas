// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`dossierApprenantSchemaV3.test return all errors with a complete invalid entry 1`] = `
[
  {
    "code": "invalid_type",
    "expected": "string",
    "message": "String attendu",
    "path": [
      "source",
    ],
    "received": "null",
  },
  {
    "code": "invalid_type",
    "expected": "string",
    "message": "String attendu",
    "path": [
      "apprenant",
      "nom",
    ],
    "received": "number",
  },
  {
    "code": "invalid_type",
    "expected": "string",
    "message": "String attendu",
    "path": [
      "apprenant",
      "prenom",
    ],
    "received": "number",
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "message": "Date invalide",
    "path": [
      "apprenant",
      "date_de_naissance",
    ],
    "received": "number",
  },
  {
    "code": "invalid_type",
    "expected": "number",
    "message": "Valeurs possibles: 0,2,3",
    "path": [
      "apprenant",
      "statut",
    ],
    "received": "string",
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "message": "Date invalide",
    "path": [
      "apprenant",
      "date_metier_mise_a_jour_statut",
    ],
    "received": "string",
  },
  {
    "code": "invalid_type",
    "expected": "string",
    "message": "String attendu",
    "path": [
      "apprenant",
      "id_erp",
    ],
    "received": "boolean",
  },
  {
    "code": "invalid_type",
    "expected": "string",
    "message": "String attendu",
    "path": [
      "apprenant",
      "ine",
    ],
    "received": "boolean",
  },
  {
    "code": "invalid_string",
    "message": "Email non valide",
    "path": [
      "apprenant",
      "email",
    ],
    "validation": "email",
  },
  {
    "code": "invalid_string",
    "message": "Format invalide",
    "path": [
      "apprenant",
      "telephone",
    ],
    "validation": "regex",
  },
  {
    "code": "invalid_string",
    "message": "Format invalide",
    "path": [
      "apprenant",
      "code_commune_insee",
    ],
    "validation": "regex",
  },
  {
    "code": "invalid_type",
    "expected": "boolean",
    "message": "Boolean attendu",
    "path": [
      "apprenant",
      "rqth",
    ],
    "received": "string",
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "message": "Date invalide",
    "path": [
      "apprenant",
      "date_rqth",
    ],
    "received": "string",
  },
  {
    "code": "invalid_string",
    "message": "SIRET invalide",
    "path": [
      "etablissement_responsable",
      "siret",
    ],
    "validation": "regex",
  },
  {
    "code": "invalid_string",
    "message": "UAI invalide",
    "path": [
      "etablissement_responsable",
      "uai",
    ],
    "validation": "regex",
  },
  {
    "code": "invalid_string",
    "message": "SIRET invalide",
    "path": [
      "etablissement_formateur",
      "siret",
    ],
    "validation": "regex",
  },
  {
    "code": "invalid_string",
    "message": "UAI invalide",
    "path": [
      "etablissement_formateur",
      "uai",
    ],
    "validation": "regex",
  },
  {
    "code": "invalid_type",
    "expected": "string",
    "message": "String attendu",
    "path": [
      "etablissement_formateur",
      "nom",
    ],
    "received": "boolean",
  },
  {
    "code": "invalid_string",
    "message": "Format invalide",
    "path": [
      "etablissement_formateur",
      "code_commune_insee",
    ],
    "validation": "regex",
  },
  {
    "code": "too_small",
    "exact": false,
    "inclusive": true,
    "message": "String must contain at least 2 character(s)",
    "minimum": 2,
    "path": [
      "formation",
      "libelle_court",
    ],
    "type": "string",
  },
  {
    "code": "too_small",
    "exact": false,
    "inclusive": true,
    "message": "String must contain at least 2 character(s)",
    "minimum": 2,
    "path": [
      "formation",
      "libelle_long",
    ],
    "type": "string",
  },
  {
    "code": "too_small",
    "exact": false,
    "inclusive": true,
    "message": "Number must be greater than or equal to 2000",
    "minimum": 2000,
    "path": [
      "formation",
      "periode",
      0,
    ],
    "type": "number",
  },
  {
    "code": "too_big",
    "exact": false,
    "inclusive": true,
    "maximum": 2100,
    "message": "Number must be less than or equal to 2100",
    "path": [
      "formation",
      "periode",
      1,
    ],
    "type": "number",
  },
  {
    "code": "too_big",
    "exact": false,
    "inclusive": true,
    "maximum": 5,
    "message": "Number must be less than or equal to 5",
    "path": [
      "formation",
      "annee",
    ],
    "type": "number",
  },
  {
    "code": "invalid_string",
    "message": "Code RNCP invalide",
    "path": [
      "formation",
      "code_rncp",
    ],
    "validation": "regex",
  },
  {
    "code": "invalid_string",
    "message": "Code CFD invalide",
    "path": [
      "formation",
      "code_cfd",
    ],
    "validation": "regex",
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "message": "Date invalide",
    "path": [
      "formation",
      "date_inscription",
    ],
    "received": "string",
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "message": "Date invalide",
    "path": [
      "formation",
      "date_entree",
    ],
    "received": "string",
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "message": "Date invalide",
    "path": [
      "formation",
      "date_fin",
    ],
    "received": "string",
  },
  {
    "code": "invalid_type",
    "expected": "boolean",
    "message": "Boolean attendu",
    "path": [
      "formation",
      "obtention_diplome",
    ],
    "received": "string",
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "message": "Date invalide",
    "path": [
      "formation",
      "date_obtention_diplome",
    ],
    "received": "string",
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "message": "Date invalide",
    "path": [
      "formation",
      "date_exclusion",
    ],
    "received": "string",
  },
  {
    "code": "invalid_type",
    "expected": "string",
    "message": "String attendu",
    "path": [
      "formation",
      "cause_exclusion",
    ],
    "received": "number",
  },
  {
    "code": "invalid_type",
    "expected": "string",
    "message": "String attendu",
    "path": [
      "formation",
      "referent_handicap",
      "nom",
    ],
    "received": "number",
  },
  {
    "code": "invalid_type",
    "expected": "string",
    "message": "String attendu",
    "path": [
      "formation",
      "referent_handicap",
      "prenom",
    ],
    "received": "number",
  },
  {
    "code": "invalid_string",
    "message": "Invalid email",
    "path": [
      "formation",
      "referent_handicap",
      "email",
    ],
    "validation": "email",
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "message": "Date invalide",
    "path": [
      "contrat",
      "date_debut",
    ],
    "received": "string",
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "message": "Date invalide",
    "path": [
      "contrat",
      "date_fin",
    ],
    "received": "number",
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "message": "Date invalide",
    "path": [
      "contrat",
      "date_rupture",
    ],
    "received": "string",
  },
  {
    "code": "invalid_type",
    "expected": "string",
    "message": "String attendu",
    "path": [
      "contrat",
      "cause_rupture",
    ],
    "received": "number",
  },
  {
    "code": "invalid_type",
    "expected": "string",
    "message": "String attendu",
    "path": [
      "employeur",
      "siret",
    ],
    "received": "boolean",
  },
  {
    "code": "invalid_type",
    "expected": "string",
    "message": "String attendu",
    "path": [
      "employeur",
      "code_commune_insee",
    ],
    "received": "boolean",
  },
  {
    "code": "invalid_string",
    "message": "UAI invalide",
    "path": [
      "employeur",
      "code_naf",
    ],
    "validation": "regex",
  },
]
`;

exports[`dossierApprenantSchemaV3.test returns required fields with empty entry 1`] = `
[
  {
    "code": "invalid_type",
    "expected": "string",
    "message": "String attendu",
    "path": [
      "source",
    ],
    "received": "undefined",
  },
  {
    "code": "invalid_type",
    "expected": "string",
    "message": "String attendu",
    "path": [
      "apprenant",
      "nom",
    ],
    "received": "undefined",
  },
  {
    "code": "invalid_type",
    "expected": "string",
    "message": "String attendu",
    "path": [
      "apprenant",
      "prenom",
    ],
    "received": "undefined",
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "message": "Champ obligatoire",
    "path": [
      "apprenant",
      "date_de_naissance",
    ],
    "received": "undefined",
  },
  {
    "code": "invalid_type",
    "expected": "number",
    "message": "Number attendu",
    "path": [
      "apprenant",
      "statut",
    ],
    "received": "undefined",
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "message": "Champ obligatoire",
    "path": [
      "apprenant",
      "date_metier_mise_a_jour_statut",
    ],
    "received": "undefined",
  },
  {
    "code": "invalid_type",
    "expected": "string",
    "message": "String attendu",
    "path": [
      "apprenant",
      "id_erp",
    ],
    "received": "undefined",
  },
  {
    "code": "custom",
    "message": "SIRET ou UAI requis",
    "path": [
      "etablissement_responsable",
    ],
  },
  {
    "code": "custom",
    "message": "SIRET ou UAI requis",
    "path": [
      "etablissement_formateur",
    ],
  },
  {
    "code": "invalid_type",
    "expected": "string",
    "message": "String attendu",
    "path": [
      "formation",
      "annee_scolaire",
    ],
    "received": "undefined",
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "message": "Champ obligatoire",
    "path": [
      "formation",
      "date_inscription",
    ],
    "received": "undefined",
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "message": "Champ obligatoire",
    "path": [
      "formation",
      "date_entree",
    ],
    "received": "undefined",
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "message": "Champ obligatoire",
    "path": [
      "formation",
      "date_fin",
    ],
    "received": "undefined",
  },
]
`;

exports[`dossierApprenantSchemaV3.test returns required root fields with empty entry 1`] = `
[
  {
    "code": "invalid_type",
    "expected": "string",
    "message": "String attendu",
    "path": [
      "source",
    ],
    "received": "undefined",
  },
  {
    "code": "invalid_type",
    "expected": "object",
    "message": "Object attendu",
    "path": [
      "apprenant",
    ],
    "received": "undefined",
  },
  {
    "code": "invalid_type",
    "expected": "object",
    "message": "Object attendu",
    "path": [
      "etablissement_responsable",
    ],
    "received": "undefined",
  },
  {
    "code": "invalid_type",
    "expected": "object",
    "message": "Object attendu",
    "path": [
      "etablissement_formateur",
    ],
    "received": "undefined",
  },
  {
    "code": "invalid_type",
    "expected": "object",
    "message": "Object attendu",
    "path": [
      "formation",
    ],
    "received": "undefined",
  },
]
`;
