# -*- mode: ruby -*-
# vi: set ft=ruby :
# Can be configured with GIT_REVISION, ANSIBLE_TAGS,ANSIBLE_PLAYBOOK env variables
# eg.
# > GIT_REVISION=master run-setup-playbook-tests.sh
# > ANSIBLE_TAGS=app run-setup-playbook-tests.sh
Vagrant.configure(2) do |config|

  config.vm.box = "ubuntu/hirsute64"
  config.vm.hostname = "flux-retour-cfas-dev"
  config.vm.network "private_network", ip: "192.168.50.7"
  config.vm.disk :disk, size: "1GB", name: "data"
  config.vm.provider :virtualbox do | provider|
    provider.name = "flux-retour-cfas-dev"
    provider.memory = 2048
    provider.cpus = 2
  end

  config.vm.provision :shell, inline: "command -v python || (apt-get update && apt-get install -y python)" #Because Ansible needs python 2
  config.vm.provision :ansible do |ansible|

    ansible.playbook = "../#{ENV['ANSIBLE_PLAYBOOK']}.yml"

    raw_arguments = []
    raw_arguments.push("--extra-vars=env_type=recette")
    raw_arguments.push("--extra-vars=git_revision=#{ENV['GIT_REVISION']}")
    raw_arguments.push("--extra-vars=dns_name=localhost")
    raw_arguments.push("--extra-vars=host_name=mna-flux-retour-cfas-test")
    raw_arguments.push("--extra-vars=update_sshd_config=false")
    raw_arguments.push("--extra-vars=backup_device=/dev/sdc")

    unless ENV['ANSIBLE_TAGS'].to_s.strip.empty?
      raw_arguments.push("--tags=#{ENV['ANSIBLE_TAGS']}")
    end

    ansible.raw_arguments = raw_arguments
  end
end
